TestReport
---------------------
Test0101
 INFO
  GET_VERSION         = [LMS2012 V1.04v(Dec 13 2013 07:58:01)]
  GET_HW_VERS         = [X86]
  GET_FW_VERS         = [V1.04v]
  GET_ID              = [123456789012]
  GET_OS_VERS         = [Linux 3.5.0-44-g]
  GET_OS_BUILD        = [1311131620]
Test0102
 VM CONTROL
  OBJECT_START        = [Running]
  OBJECT_STOP         = [Stopped]
  OBJECT_START        = [Running]
  OBJECT_STOP         = [Stopped]
  OBJ_START           = [Running]
  OBJ_STOP            = [Stopped]
  OBJ_START           = [Running]
  OBJ_STOP            = [Stopped]
  OBJECT_TRIG/WAIT    = [Ok]
  PROGRAM_START       = [Running]
  GET_PRGRESULT       = [Busy]
  PROGRAM_STOP        = [Stopped]
  GET_PRGRESULT       = [Ok]
  GET_PRGRESULT       = [Fail]
  GET_SPEED           = [>=1000]
 VM INFO
  GET_ERROR           = [0033]
  ERRORTEXT           = [OUT_OF_MEMORY]
  ERRORTEXT           = []
  GET_VOLUME          = [0000]
  GET_VOLUME          = [0100]
  GET_MINUTES         = [0000]
  GET_MINUTES         = [0120]
 VM RANDOM
  >= 10     <= 20     = [Ok]
  >=-20     <=-10     = [Ok]
  >= 0      <= 1      = [Ok]
 VM PORT_CNV_OUTPUT
  101                 = [000000010000]
  102                 = [000000020000]
  103                 = [000000040000]
  104                 = [000000080000]
  112                 = [000000030000]
  121                 = [000000030001]
  110                 = [000000010001]
  404                 = [000300080000]
 VM PORT_CNV_INPUT
  101                 = [00000000]
  404                 = [00030003]
 VM NOTE_TO_FREQ
  C4                  = [000262]
  B6                  = [001976]
  C#4                 = [000277]
  A#6                 = [001865]
Test0103
 VM STRINGS
  GET_SIZE            = [000000]
  GET_SIZE            = [000010]
  Src1                = [Src1]
  Src1 + Src2         = [Src1Src2]
  123.456  xxxxxx.xxx = [   123.456]
  123.456  xxxxxxx.xx = [    123.46]
  6.0000   xxxxx.xxxx = [    6]
  6.6000   xxxxx.xxxx = [    6.6]
  6.6600   xxxxx.xxxx = [    6.66]
  345.67   xxxxx.xxxx = [  345.67]
  12345.67 xxxxx.xxxx = [12345.6699]
  12345.67    xx.xxxx = [12345.6]
  -12345.67   xx.xxxx = [-12345]
  12345.67      .xxxx = [12345]
  12345.67       xxxx = [1234]
  123.456 -xxxxxx.xxx = [123.456]
  6.0000  -xxxxx.xxxx = [6]
  6.6000  -xxxxx.xxxx = [6.6]
  6.6600  -xxxxx.xxxx = [6.66]
  345.67  -xxxxx.xxxx = [345.67]
  12345.67-xxxxx.xxxx = [12345.6699]
  12345.67   -xx.xxxx = [12345.6]
  -12345.67  -xx.xxxx = [-12345]
  12345.67     -.xxxx = [12345]
  12345.67      -xxxx = [1234]
  nan        xxxxxxxx = [    ----]
  nan            xxxx = [----]
  nan              xx = [--]
  nan       -xxxxxxxx = [----    ]
  nan           -xxxx = [----]
  nan             -xx = [--]
  inf            xxxx = [ inf]
  -inf           xxxx = [-inf]
  100       xxxxxxxxx = [000000100]
  100          xxxxxx = [000100]
  100              xx = [10]
  123.456     xxx.xxx = [123.456]
  123,456     xxx.xxx = [123.456]
   123.456    xxx.xxx = [123.456]
  123.456HI   xxx.xxx = [123.456]
  123.456 HI  xxx.xxx = [123.456]
  0           xxx.xxx = [  0]
  0.1         xxx.xxx = [  0.1]
  STRIP " 1 23  456 " = [123456]
  SUB "LEGO EV3"-"LE" = [GO EV3]
Test0104
 VM MATH
  13.57 x 57.13       = [  775.25409]
  57.13 x 13.57       = [  775.25409]
  13.57 / 57.13       = [    0.23753]
  57.13 / 13.57       = [    4.21002]
  13.57 + 57.13       = [   70.7]
  57.13 + 13.57       = [   70.7]
  13.57 - 57.13       = [  -43.56]
  57.13 - 13.57       = [   43.56]
  EXP(1)              = [    2.71828]
  4^2                 = [         16]
  2^10                = [       1024]
  10^10               = [    10000000000]
  10^10         -11,4 = [1]
  10^10         -16,4 = [10000000000]
  20^10               = [ 10240000000000]
  12     MOD8  5      = [   2]
  302    MOD16 5      = [   2]
  100002 MOD32 5      = [   2]
  5.2    MODF  5      = [   0.2]
  FLOOR 5.499         = [   5]
  FLOOR 5.500         = [   5]
  FLOOR -5.499        = [  -6]
  FLOOR -5.500        = [  -6]
  CEIL  5.499         = [   6]
  CEIL  5.500         = [   6]
  CEIL  -5.499        = [  -5]
  CEIL  -5.500        = [  -5]
  ROUND 5.499         = [   5]
  ROUND 5.500         = [   6]
  ROUND -5.499        = [  -5]
  ROUND -5.500        = [  -6]
  ABS   5.499         = [   5.499]
  ABS   -5.499        = [   5.499]
  NEGATE 5.499        = [  -5.499]
  NEGATE -5.499       = [   5.499]
  TRUNC  5.499 to 3   = [   5.499]
  TRUNC -5.499 to 1   = [  -5.4]
  TRUNC 0.123456 to-1 = [ 0]
  TRUNC 0.123456 to 0 = [ 0]
  TRUNC 0.123456 to 1 = [ 0.1]
  TRUNC 0.123456 to 2 = [ 0.12]
  TRUNC 0.123456 to 3 = [ 0.123]
  TRUNC 0.123456 to 4 = [ 0.1234]
  TRUNC 0.123456 to 5 = [ 0.12345]
  TRUNC 0.123456 to 6 = [ 0.123456]
  SQRT  100.0         = [  10]
  SQRT  0.0           = [   0]
  LOG   1.0           = [   0]
  LOG   100.0         = [   2]
  LOG   1000.0        = [   3]
  LN    1.0           = [   0]
  LN    100.0         = [   4.60517]
  LN    1000.0        = [   6.907755]
  SIN   1.0           = [   0.017452]
  SIN   -5.499        = [  -0.095828]
  SIN   0.0           = [   0]
  COS   1.0           = [   0.999848]
  COS   -5.499        = [   0.995398]
  COS   0.0           = [   1]
  TAN   1.0           = [   0.017455]
  TAN   -5.499        = [  -0.096271]
  TAN   0.0           = [   0]
  ASIN  1.0           = [  90]
  ASIN  -5.499        = [       ----]
  ASIN  0.0           = [   0]
  ACOS  1.0           = [   0]
  ACOS  -5.499        = [       ----]
  ACOS  0.0           = [  90]
  ATAN  1.0           = [  45]
  ATAN  -5.499        = [ -79.693321]
  ATAN  0.0           = [   0]
 VM MATH ABNORMALS
  13.57 / 0.0         = [        inf]
  0.0 / 0.0           = [       ----]
  SQRT  -5.499        = [       ----]
  LOG   -5.499        = [       ----]
  LOG   0.0           = [       -inf]
  LN    -5.499        = [       ----]
  LN    0.0           = [       -inf]
Test0105
 VM LOGIC8
  OR8   0x55 0x00     = [85]
  OR8   0x55 0xAA     = [-1]
  OR8   0x55 0x55     = [85]
  AND8  0x55 0x00     = [0]
  AND8  0x55 0xAA     = [0]
  AND8  0x55 0x55     = [85]
  XOR8  0x55 0x00     = [85]
  XOR8  0x55 0xAA     = [-1]
  XOR8  0x55 0x55     = [0]
  RL8   0x55 1        = [-86]
  RL8   0x55 2        = [84]
  RL8   0x55 -1       = [0]
 VM LOGIC16
  OR16  0x5555 0x0000 = [21845]
  OR16  0x5555 0xAAAA = [-1]
  OR16  0x5555 0x5555 = [21845]
  AND16 0x5555 0x0000 = [0]
  AND16 0x5555 0xAAAA = [0]
  AND16 0x5555 0x5555 = [21845]
  XOR16 0x5555 0x0000 = [21845]
  XOR16 0x5555 0xAAAA = [-1]
  XOR16 0x5555 0x5555 = [0]
  RL16  0x5555 1      = [-21846]
  RL16  0x5555 2      = [21844]
  RL16  0x5555 -1     = [0]
 VM LOGIC32
  OR32  8x5 8x0       = [1431655808]
  OR32  8x5 8xA       = [-1]
  OR32  8x5 8x5       = [1431655808]
  AND32 8x5 8x0       = [0]
  AND32 8x5 8xA       = [0]
  AND32 8x5 8x5       = [1431655808]
  XOR32 8x5 8x0       = [1431655808]
  XOR32 8x5 8xA       = [-1]
  XOR32 8x5 8x5       = [0]
  RL32  0x55555555 1  = [-1431655808]
  RL32  0x55555555 2  = [1431655808]
Test0106
 VM MOVE8_8
  MOVE8_8    0        = [     0]
  MOVE8_8    127      = [   127]
  MOVE8_8    -127     = [  -127]
  MOVE8_8    nan      = [         ----]
 VM MOVE16_8
  MOVE16_8   0        = [     0]
  MOVE16_8   127      = [   127]
  MOVE16_8   -127     = [  -127]
  MOVE16_8   128      = [   127]
  MOVE16_8   -128     = [  -127]
  MOVE16_8   nan      = [         ----]
 VM MOVE32_8
  MOVE32_8   0        = [     0]
  MOVE32_8   127      = [   127]
  MOVE32_8   -127     = [  -127]
  MOVE32_8   128      = [   127]
  MOVE32_8   -128     = [  -127]
  MOVE32_8   nan      = [         ----]
 VM MOVEF_8
  MOVEF_8    0        = [     0]
  MOVEF_8    127      = [   127]
  MOVEF_8    -127     = [  -127]
  MOVEF_8    128      = [   127]
  MOVEF_8    -128     = [  -127]
  MOVEF_8    nan      = [         ----]
 VM MOVE8_16
  MOVE8_16   0        = [     0]
  MOVE8_16   127      = [   127]
  MOVE8_16   -127     = [  -127]
  MOVE8_16   nan      = [         ----]
 VM MOVE16_16
  MOVE16_16  0        = [     0]
  MOVE16_16  127      = [   127]
  MOVE16_16  -127     = [  -127]
  MOVE16_16  128      = [   128]
  MOVE16_16  -128     = [  -128]
  MOVE16_16  32767    = [ 32767]
  MOVE16_16  -32767   = [-32767]
  MOVE16_16  nan      = [         ----]
 VM MOVE32_16
  MOVE32_16  0        = [     0]
  MOVE32_16  127      = [   127]
  MOVE32_16  -127     = [  -127]
  MOVE32_16  128      = [   128]
  MOVE32_16  -128     = [  -128]
  MOVE32_16  32767    = [ 32767]
  MOVE32_16  -32767   = [-32767]
  MOVE32_16  32768    = [ 32767]
  MOVE32_16  -32768   = [-32767]
  MOVE32_16  nan      = [         ----]
 VM MOVEF_16
  MOVEF_16   0        = [     0]
  MOVEF_16   127      = [   127]
  MOVEF_16   -127     = [  -127]
  MOVEF_16   128      = [   128]
  MOVEF_16   -128     = [  -128]
  MOVEF_16   32767    = [ 32767]
  MOVEF_16   -32767   = [-32767]
  MOVEF_16   32768    = [ 32767]
  MOVEF_16   -32768   = [-32767]
  MOVEF_16   nan      = [         ----]
 VM MOVE8_32
  MOVE8_32   0        = [     0]
  MOVE8_32   127      = [   127]
  MOVE8_32   -127     = [  -127]
  MOVE8_32   nan      = [         ----]
 VM MOVE16_32
  MOVE16_32  0        = [     0]
  MOVE16_32  127      = [   127]
  MOVE16_32  -127     = [  -127]
  MOVE16_32  128      = [   128]
  MOVE16_32  -128     = [  -128]
  MOVE16_32  32767    = [ 32767]
  MOVE16_32  -32767   = [-32767]
  MOVE16_32  nan      = [         ----]
 VM MOVE32_32
  MOVE32_32  0        = [     0]
  MOVE32_32  127      = [   127]
  MOVE32_32  -127     = [  -127]
  MOVE32_32  128      = [   128]
  MOVE32_32  -128     = [  -128]
  MOVE32_32  32767    = [ 32767]
  MOVE32_32  -32767   = [-32767]
  MOVE32_32  32768    = [ 32768]
  MOVE32_32  -32768   = [-32768]
  MOVE32_32  max      = [2147483648]
  MOVE32_32  min      = [-2147483648]
  MOVE32_32  nan      = [         ----]
 VM MOVEF_32
  MOVEF_32   0        = [     0]
  MOVEF_32   127      = [   127]
  MOVEF_32   -127     = [  -127]
  MOVEF_32   128      = [   128]
  MOVEF_32   -128     = [  -128]
  MOVEF_32   32767    = [ 32767]
  MOVEF_32   -32767   = [-32767]
  MOVEF_32   32768    = [ 32768]
  MOVEF_32   -32768   = [-32768]
  MOVEF_32   max      = [2147483008]
  MOVEF_32   min      = [-2147483008]
  MOVEF_32   nan      = [         ----]
 VM MOVE8_F
  MOVE8_F    0        = [     0]
  MOVE8_F    127      = [   127]
  MOVE8_F    -127     = [  -127]
  MOVE8_F    nan      = [         ----]
 VM MOVE16_F
  MOVE16_F   0        = [     0]
  MOVE16_F   127      = [   127]
  MOVE16_F   -127     = [  -127]
  MOVE16_F   128      = [   128]
  MOVE16_F   -128     = [  -128]
  MOVE16_F   32767    = [ 32767]
  MOVE16_F   -32767   = [-32767]
  MOVE16_F   nan      = [         ----]
 VM MOVE32_F
  MOVE32_F   0        = [     0]
  MOVE32_F   127      = [   127]
  MOVE32_F   -127     = [  -127]
  MOVE32_F   128      = [   128]
  MOVE32_F   -128     = [  -128]
  MOVE32_F   32767    = [ 32767]
  MOVE32_F   -32767   = [-32767]
  MOVE32_F   32768    = [ 32768]
  MOVE32_F   -32768   = [-32768]
  MOVE32_F   max      = [2147483648]
  MOVE32_F   min      = [-2147483648]
  MOVE32_F   nan      = [         ----]
 VM MOVEF_F
  MOVEF_F    0        = [     0]
  MOVEF_F    127      = [   127]
  MOVEF_F    -127     = [  -127]
  MOVEF_F    128      = [   128]
  MOVEF_F    -128     = [  -128]
  MOVEF_F    32767    = [ 32767]
  MOVEF_F    -32767   = [-32767]
  MOVEF_F    32768    = [ 32768]
  MOVEF_F    -32768   = [-32768]
  MOVEF_F    max      = [2147483648]
  MOVEF_F    min      = [-2147483648]
  MOVEF_F    nan      = [         ----]
Test0107
 VM WRITE/READ
  WRITE8  0x4C        = [    L       ]
  READ8               = [    76]
  WRITE16 0x454C      = [    LE      ]
  READ16              = [ 17740]
  WRITE32 0x4F47454C  = [    LEGO    ]
  READ32              = [1330070912]
  WRITEF  0x4F47454C  = [    LEGO    ]
  READF               = [3343207424]
Test0108
 VM JR
  JR                  = [OK]
 VM JR_FALSE
  JR_FALSE  0         = [OK]
  JR_FALSE  1         = [OK]
  JR_FALSE  127       = [OK]
  JR_FALSE  -127      = [OK]
  JR_FALSE  nan       = [OK]
 VM JR_TRUE
  JR_TRUE   1         = [OK]
  JR_TRUE   0         = [OK]
  JR_TRUE   127       = [OK]
  JR_TRUE   -127      = [OK]
  JR_TRUE   nan       = [OK]
 VM JR_NAN
  JR_NAN    nan       = [OK]
  JR_NAN    0         = [OK]
 VM JR_LT8
  JR_LT8    1 <   2   = [OK]
  JR_LT8    2 <   2   = [OK]
  JR_LT8    3 <   2   = [OK]
  JR_LT8   -2 <   2   = [OK]
  JR_LT8   -1 <  -2   = [OK]
  JR_LT8   -2 <  -2   = [OK]
  JR_LT8   -3 <  -2   = [OK]
 VM JR_LT16
  JR_LT16   1 <   2   = [OK]
  JR_LT16   2 <   2   = [OK]
  JR_LT16   3 <   2   = [OK]
  JR_LT16  -2 <   2   = [OK]
  JR_LT16  -1 <  -2   = [OK]
  JR_LT16  -2 <  -2   = [OK]
  JR_LT16  -3 <  -2   = [OK]
 VM JR_LT32
  JR_LT32   1 <   2   = [OK]
  JR_LT32   2 <   2   = [OK]
  JR_LT32   3 <   2   = [OK]
  JR_LT32  -2 <   2   = [OK]
  JR_LT32  -1 <  -2   = [OK]
  JR_LT32  -2 <  -2   = [OK]
  JR_LT32  -3 <  -2   = [OK]
 VM JR_LTF
  JR_LTF    1 <   2   = [OK]
  JR_LTF    2 <   2   = [OK]
  JR_LTF    3 <   2   = [OK]
  JR_LTF   -2 <   2   = [OK]
  JR_LTF   -1 <  -2   = [OK]
  JR_LTF   -2 <  -2   = [OK]
  JR_LTF   -3 <  -2   = [OK]
 VM JR_GT8
  JR_GT8    1 >   2   = [OK]
  JR_GT8    2 >   2   = [OK]
  JR_GT8    3 >   2   = [OK]
  JR_GT8   -2 >   2   = [OK]
  JR_GT8   -1 >  -2   = [OK]
  JR_GT8   -2 >  -2   = [OK]
  JR_GT8   -3 >  -2   = [OK]
 VM JR_GT16
  JR_GT16   1 >   2   = [OK]
  JR_GT16   2 >   2   = [OK]
  JR_GT16   3 >   2   = [OK]
  JR_GT16  -2 >   2   = [OK]
  JR_GT16  -1 >  -2   = [OK]
  JR_GT16  -2 >  -2   = [OK]
  JR_GT16  -3 >  -2   = [OK]
 VM JR_GT32
  JR_GT32   1 >   2   = [OK]
  JR_GT32   2 >   2   = [OK]
  JR_GT32   3 >   2   = [OK]
  JR_GT32  -2 >   2   = [OK]
  JR_GT32  -1 >  -2   = [OK]
  JR_GT32  -2 >  -2   = [OK]
  JR_GT32  -3 >  -2   = [OK]
 VM JR_GTF
  JR_GTF    1 >   2   = [OK]
  JR_GTF    2 >   2   = [OK]
  JR_GTF    3 >   2   = [OK]
  JR_GTF   -2 >   2   = [OK]
  JR_GTF   -1 >  -2   = [OK]
  JR_GTF   -2 >  -2   = [OK]
  JR_GTF   -3 >  -2   = [OK]
 VM JR_EQ8
  JR_EQ8    1 ==  2   = [OK]
  JR_EQ8    2 ==  2   = [OK]
  JR_EQ8    3 ==  2   = [OK]
  JR_EQ8   -2 ==  2   = [OK]
  JR_EQ8   -1 == -2   = [OK]
  JR_EQ8   -2 == -2   = [OK]
  JR_EQ8   -3 == -2   = [OK]
 VM JR_EQ16
  JR_EQ16   1 ==  2   = [OK]
  JR_EQ16   2 ==  2   = [OK]
  JR_EQ16   3 ==  2   = [OK]
  JR_EQ16  -2 ==  2   = [OK]
  JR_EQ16  -1 == -2   = [OK]
  JR_EQ16  -2 == -2   = [OK]
  JR_EQ16  -3 == -2   = [OK]
 VM JR_EQ32
  JR_EQ32   1 ==  2   = [OK]
  JR_EQ32   2 ==  2   = [OK]
  JR_EQ32   3 ==  2   = [OK]
  JR_EQ32  -2 ==  2   = [OK]
  JR_EQ32  -1 == -2   = [OK]
  JR_EQ32  -2 == -2   = [OK]
  JR_EQ32  -3 == -2   = [OK]
 VM JR_EQF
  JR_EQF    1 ==  2   = [OK]
  JR_EQF    2 ==  2   = [OK]
  JR_EQF    3 ==  2   = [OK]
  JR_EQF   -2 ==  2   = [OK]
  JR_EQF   -1 == -2   = [OK]
  JR_EQF   -2 == -2   = [OK]
  JR_EQF   -3 == -2   = [OK]
 VM JR_NEQ8
  JR_NEQ8   1 !=  2   = [OK]
  JR_NEQ8   2 !=  2   = [OK]
  JR_NEQ8   3 !=  2   = [OK]
  JR_NEQ8  -2 !=  2   = [OK]
  JR_NEQ8  -1 != -2   = [OK]
  JR_NEQ8  -2 != -2   = [OK]
  JR_NEQ8  -3 != -2   = [OK]
 VM JR_NEQ16
  JR_NEQ16  1 !=  2   = [OK]
  JR_NEQ16  2 !=  2   = [OK]
  JR_NEQ16  3 !=  2   = [OK]
  JR_NEQ16 -2 !=  2   = [OK]
  JR_NEQ16 -1 != -2   = [OK]
  JR_NEQ16 -2 != -2   = [OK]
  JR_NEQ16 -3 != -2   = [OK]
 VM JR_NEQ32
  JR_NEQ32  1 !=  2   = [OK]
  JR_NEQ32  2 !=  2   = [OK]
  JR_NEQ32  3 !=  2   = [OK]
  JR_NEQ32 -2 !=  2   = [OK]
  JR_NEQ32 -1 != -2   = [OK]
  JR_NEQ32 -2 != -2   = [OK]
  JR_NEQ32 -3 != -2   = [OK]
 VM JR_NEQF
  JR_NEQF   1 !=  2   = [OK]
  JR_NEQF   2 !=  2   = [OK]
  JR_NEQF   3 !=  2   = [OK]
  JR_NEQF  -2 !=  2   = [OK]
  JR_NEQF  -1 != -2   = [OK]
  JR_NEQF  -2 != -2   = [OK]
  JR_NEQF  -3 != -2   = [OK]
 VM JR_LTEQ8
  JR_LTEQ8    1 <=  2 = [OK]
  JR_LTEQ8    2 <=  2 = [OK]
  JR_LTEQ8    3 <=  2 = [OK]
  JR_LTEQ8   -2 <=  2 = [OK]
  JR_LTEQ8   -1 <= -2 = [OK]
  JR_LTEQ8   -2 <= -2 = [OK]
  JR_LTEQ8   -3 <= -2 = [OK]
 VM JR_LTEQ16
  JR_LTEQ16   1 <=  2 = [OK]
  JR_LTEQ16   2 <=  2 = [OK]
  JR_LTEQ16   3 <=  2 = [OK]
  JR_LTEQ16  -2 <=  2 = [OK]
  JR_LTEQ16  -1 <= -2 = [OK]
  JR_LTEQ16  -2 <= -2 = [OK]
  JR_LTEQ16  -3 <= -2 = [OK]
 VM JR_LTEQ32
  JR_LTEQ32   1 <=  2 = [OK]
  JR_LTEQ32   2 <=  2 = [OK]
  JR_LTEQ32   3 <=  2 = [OK]
  JR_LTEQ32  -2 <=  2 = [OK]
  JR_LTEQ32  -1 <= -2 = [OK]
  JR_LTEQ32  -2 <= -2 = [OK]
  JR_LTEQ32  -3 <= -2 = [OK]
 VM JR_LTEQF
  JR_LTEQF    1 <=  2 = [OK]
  JR_LTEQF    2 <=  2 = [OK]
  JR_LTEQF    3 <=  2 = [OK]
  JR_LTEQF   -2 <=  2 = [OK]
  JR_LTEQF   -1 <= -2 = [OK]
  JR_LTEQF   -2 <= -2 = [OK]
  JR_LTEQF   -3 <= -2 = [OK]
 VM JR_GTEQ8
  JR_GTEQ8    1 >=  2 = [OK]
  JR_GTEQ8    2 >=  2 = [OK]
  JR_GTEQ8    3 >=  2 = [OK]
  JR_GTEQ8   -2 >=  2 = [OK]
  JR_GTEQ8   -1 >= -2 = [OK]
  JR_GTEQ8   -2 >= -2 = [OK]
  JR_GTEQ8   -3 >= -2 = [OK]
 VM JR_GTEQ16
  JR_GTEQ16   1 >=  2 = [OK]
  JR_GTEQ16   2 >=  2 = [OK]
  JR_GTEQ16   3 >=  2 = [OK]
  JR_GTEQ16  -2 >=  2 = [OK]
  JR_GTEQ16  -1 >= -2 = [OK]
  JR_GTEQ16  -2 >= -2 = [OK]
  JR_GTEQ16  -3 >= -2 = [OK]
 VM JR_GTEQ32
  JR_GTEQ32   1 >=  2 = [OK]
  JR_GTEQ32   2 >=  2 = [OK]
  JR_GTEQ32   3 >=  2 = [OK]
  JR_GTEQ32  -2 >=  2 = [OK]
  JR_GTEQ32  -1 >= -2 = [OK]
  JR_GTEQ32  -2 >= -2 = [OK]
  JR_GTEQ32  -3 >= -2 = [OK]
 VM JR_GTEQF
  JR_GTEQF    1 >=  2 = [OK]
  JR_GTEQF    2 >=  2 = [OK]
  JR_GTEQF    3 >=  2 = [OK]
  JR_GTEQF   -2 >=  2 = [OK]
  JR_GTEQF   -1 >= -2 = [OK]
  JR_GTEQF   -2 >= -2 = [OK]
  JR_GTEQF   -3 >= -2 = [OK]
Test0109
 VM CP_LT8
  CP_LT8      1 <   2 = [1]
  CP_LT8      2 <   2 = [0]
  CP_LT8      3 <   2 = [0]
  CP_LT8     -2 <   2 = [1]
  CP_LT8      2 <  -2 = [0]
  CP_LT8     -1 <  -2 = [0]
  CP_LT8     -2 <  -2 = [0]
  CP_LT8     -3 <  -2 = [1]
 VM CP_LT16
  CP_LT16     1 <   2 = [1]
  CP_LT16     2 <   2 = [0]
  CP_LT16     3 <   2 = [0]
  CP_LT16    -2 <   2 = [1]
  CP_LT16     2 <  -2 = [0]
  CP_LT16    -1 <  -2 = [0]
  CP_LT16    -2 <  -2 = [0]
  CP_LT16    -3 <  -2 = [1]
 VM CP_LT32
  CP_LT32     1 <   2 = [1]
  CP_LT32     2 <   2 = [0]
  CP_LT32     3 <   2 = [0]
  CP_LT32    -2 <   2 = [1]
  CP_LT32     2 <  -2 = [0]
  CP_LT32    -1 <  -2 = [0]
  CP_LT32    -2 <  -2 = [0]
  CP_LT32    -3 <  -2 = [1]
 VM CP_LTF
  CP_LTF      1 <   2 = [1]
  CP_LTF      2 <   2 = [0]
  CP_LTF      3 <   2 = [0]
  CP_LTF     -2 <   2 = [1]
  CP_LTF      2 <  -2 = [0]
  CP_LTF     -1 <  -2 = [0]
  CP_LTF     -2 <  -2 = [0]
  CP_LTF     -3 <  -2 = [1]
 VM CP_GT8
  CP_GT8      1 >   2 = [0]
  CP_GT8      2 >   2 = [0]
  CP_GT8      3 >   2 = [1]
  CP_GT8     -2 >   2 = [0]
  CP_GT8      2 >  -2 = [1]
  CP_GT8     -1 >  -2 = [1]
  CP_GT8     -2 >  -2 = [0]
  CP_GT8     -3 >  -2 = [0]
 VM CP_GT16
  CP_GT16     1 >   2 = [0]
  CP_GT16     2 >   2 = [0]
  CP_GT16     3 >   2 = [1]
  CP_GT16    -2 >   2 = [0]
  CP_GT16     2 >  -2 = [1]
  CP_GT16    -1 >  -2 = [1]
  CP_GT16    -2 >  -2 = [0]
  CP_GT16    -3 >  -2 = [0]
 VM CP_GT32
  CP_GT32     1 >   2 = [0]
  CP_GT32     2 >   2 = [0]
  CP_GT32     3 >   2 = [1]
  CP_GT32    -2 >   2 = [0]
  CP_GT32     2 >  -2 = [1]
  CP_GT32    -1 >  -2 = [1]
  CP_GT32    -2 >  -2 = [0]
  CP_GT32    -3 >  -2 = [0]
 VM CP_GTF
  CP_GTF      1 >   2 = [0]
  CP_GTF      2 >   2 = [0]
  CP_GTF      3 >   2 = [1]
  CP_GTF     -2 >   2 = [0]
  CP_GTF      2 >  -2 = [1]
  CP_GTF     -1 >  -2 = [1]
  CP_GTF     -2 >  -2 = [0]
  CP_GTF     -3 >  -2 = [0]
 VM CP_EQ8
  CP_EQ8      1 ==  2 = [0]
  CP_EQ8      2 ==  2 = [1]
  CP_EQ8      3 ==  2 = [0]
  CP_EQ8     -2 ==  2 = [0]
  CP_EQ8      2 == -2 = [0]
  CP_EQ8     -1 == -2 = [0]
  CP_EQ8     -2 == -2 = [1]
  CP_EQ8     -3 == -2 = [0]
 VM CP_EQ16
  CP_EQ16     1 ==  2 = [0]
  CP_EQ16     2 ==  2 = [1]
  CP_EQ16     3 ==  2 = [0]
  CP_EQ16    -2 ==  2 = [0]
  CP_EQ16     2 == -2 = [0]
  CP_EQ16    -1 == -2 = [0]
  CP_EQ16    -2 == -2 = [1]
  CP_EQ16    -3 == -2 = [0]
 VM CP_EQ32
  CP_EQ32     1 ==  2 = [0]
  CP_EQ32     2 ==  2 = [1]
  CP_EQ32     3 ==  2 = [0]
  CP_EQ32    -2 ==  2 = [0]
  CP_EQ32     2 == -2 = [0]
  CP_EQ32    -1 == -2 = [0]
  CP_EQ32    -2 == -2 = [1]
  CP_EQ32    -3 == -2 = [0]
 VM CP_EQF
  CP_EQF      1 ==  2 = [0]
  CP_EQF      2 ==  2 = [1]
  CP_EQF      3 ==  2 = [0]
  CP_EQF     -2 ==  2 = [0]
  CP_EQF      2 == -2 = [0]
  CP_EQF     -1 == -2 = [0]
  CP_EQF     -2 == -2 = [1]
  CP_EQF     -3 == -2 = [0]
 VM CP_NEQ8
  CP_NEQ8     1 !=  2 = [1]
  CP_NEQ8     2 !=  2 = [0]
  CP_NEQ8     3 !=  2 = [1]
  CP_NEQ8    -2 !=  2 = [1]
  CP_NEQ8     2 != -2 = [1]
  CP_NEQ8    -1 != -2 = [1]
  CP_NEQ8    -2 != -2 = [0]
  CP_NEQ8    -3 != -2 = [1]
 VM CP_NEQ16
  CP_NEQ16    1 !=  2 = [1]
  CP_NEQ16    2 !=  2 = [0]
  CP_NEQ16    3 !=  2 = [1]
  CP_NEQ16   -2 !=  2 = [1]
  CP_NEQ16    2 != -2 = [1]
  CP_NEQ16   -1 != -2 = [1]
  CP_NEQ16   -2 != -2 = [0]
  CP_NEQ16   -3 != -2 = [1]
 VM CP_NEQ32
  CP_NEQ32    1 !=  2 = [1]
  CP_NEQ32    2 !=  2 = [0]
  CP_NEQ32    3 !=  2 = [1]
  CP_NEQ32   -2 !=  2 = [1]
  CP_NEQ32    2 != -2 = [1]
  CP_NEQ32   -1 != -2 = [1]
  CP_NEQ32   -2 != -2 = [0]
  CP_NEQ32   -3 != -2 = [1]
 VM CP_NEQF
  CP_NEQF     1 !=  2 = [1]
  CP_NEQF     2 !=  2 = [0]
  CP_NEQF     3 !=  2 = [1]
  CP_NEQF    -2 !=  2 = [1]
  CP_NEQF     2 != -2 = [1]
  CP_NEQF    -1 != -2 = [1]
  CP_NEQF    -2 != -2 = [0]
  CP_NEQF    -3 != -2 = [1]
 VM CP_LTEQ8
  CP_LTEQ8    1 <=  2 = [1]
  CP_LTEQ8    2 <=  2 = [1]
  CP_LTEQ8    3 <=  2 = [0]
  CP_LTEQ8   -2 <=  2 = [1]
  CP_LTEQ8    2 <= -2 = [0]
  CP_LTEQ8   -1 <= -2 = [0]
  CP_LTEQ8   -2 <= -2 = [1]
  CP_LTEQ8   -3 <= -2 = [1]
 VM CP_LTEQ16
  CP_LTEQ16   1 <=  2 = [1]
  CP_LTEQ16   2 <=  2 = [1]
  CP_LTEQ16   3 <=  2 = [0]
  CP_LTEQ16  -2 <=  2 = [1]
  CP_LTEQ16   2 <= -2 = [0]
  CP_LTEQ16  -1 <= -2 = [0]
  CP_LTEQ16  -2 <= -2 = [1]
  CP_LTEQ16  -3 <= -2 = [1]
 VM CP_LTEQ32
  CP_LTEQ32   1 <=  2 = [1]
  CP_LTEQ32   2 <=  2 = [1]
  CP_LTEQ32   3 <=  2 = [0]
  CP_LTEQ32  -2 <=  2 = [1]
  CP_LTEQ32   2 <= -2 = [0]
  CP_LTEQ32  -1 <= -2 = [0]
  CP_LTEQ32  -2 <= -2 = [1]
  CP_LTEQ32  -3 <= -2 = [1]
 VM CP_LTEQF
  CP_LTEQF    1 <=  2 = [1]
  CP_LTEQF    2 <=  2 = [1]
  CP_LTEQF    3 <=  2 = [0]
  CP_LTEQF   -2 <=  2 = [1]
  CP_LTEQF    2 <= -2 = [0]
  CP_LTEQF   -1 <= -2 = [0]
  CP_LTEQF   -2 <= -2 = [1]
  CP_LTEQF   -3 <= -2 = [1]
 VM CP_GTEQ8
  CP_GTEQ8    1 >=  2 = [0]
  CP_GTEQ8    2 >=  2 = [1]
  CP_GTEQ8    3 >=  2 = [1]
  CP_GTEQ8   -2 >=  2 = [0]
  CP_GTEQ8    2 >= -2 = [1]
  CP_GTEQ8   -1 >= -2 = [1]
  CP_GTEQ8   -2 >= -2 = [1]
  CP_GTEQ8   -3 >= -2 = [0]
 VM CP_GTEQ16
  CP_GTEQ16   1 >=  2 = [0]
  CP_GTEQ16   2 >=  2 = [1]
  CP_GTEQ16   3 >=  2 = [1]
  CP_GTEQ16  -2 >=  2 = [0]
  CP_GTEQ16   2 >= -2 = [1]
  CP_GTEQ16  -1 >= -2 = [1]
  CP_GTEQ16  -2 >= -2 = [1]
  CP_GTEQ16  -3 >= -2 = [0]
 VM CP_GTEQ32
  CP_GTEQ32   1 >=  2 = [0]
  CP_GTEQ32   2 >=  2 = [1]
  CP_GTEQ32   3 >=  2 = [1]
  CP_GTEQ32  -2 >=  2 = [0]
  CP_GTEQ32   2 >= -2 = [1]
  CP_GTEQ32  -1 >= -2 = [1]
  CP_GTEQ32  -2 >= -2 = [1]
  CP_GTEQ32  -3 >= -2 = [0]
 VM CP_GTEQF
  CP_GTEQF    1 >=  2 = [0]
  CP_GTEQF    2 >=  2 = [1]
  CP_GTEQF    3 >=  2 = [1]
  CP_GTEQF   -2 >=  2 = [0]
  CP_GTEQF    2 >= -2 = [1]
  CP_GTEQF   -1 >= -2 = [1]
  CP_GTEQF   -2 >= -2 = [1]
  CP_GTEQF   -3 >= -2 = [0]
Test0110
 VM SELECT8
  SELECT8    0?  1  2 = [2]
  SELECT8    1?  1  2 = [1]
  SELECT8   -1?  1  2 = [1]
 VM SELECT16
  SELECT16   0?  1  2 = [2]
  SELECT16   1?  1  2 = [1]
  SELECT16  -1?  1  2 = [1]
 VM SELECT32
  SELECT32   0?  1  2 = [2]
  SELECT32   1?  1  2 = [1]
  SELECT32  -1?  1  2 = [1]
 VM SELECTF
  SELECTF    0?  1  2 = [2]
  SELECTF    1?  1  2 = [1]
  SELECTF   -1?  1  2 = [1]
Test0111
 PERFORMANCE
  Runtime 4 devices   = [8319]
Test0201
 MEMORY ARRAY DATA8
  CREATE8  handle     = [3]
  SIZE                = [0]
  RESIZE              = [10]
  FILL                = [55]
  COPY                = [55]
  WRITE/READ_CONTENT  = [77]
  READ_SIZE           = [10]
  ARRAY_WRITE/READ    = [99]
  SIZE                = [12]
  ARRAY_APPEND        = [54]
  SIZE                = [13]
 MEMORY ARRAY DATA16
  CREATE16 handle     = [3]
  SIZE                = [0]
  RESIZE              = [10]
  FILL                = [55]
  COPY                = [55]
  WRITE/READ_CONTENT  = [77]
  READ_SIZE           = [20]
  ARRAY_WRITE/READ    = [99]
  SIZE                = [12]
  ARRAY_APPEND        = [54]
  SIZE                = [13]
 MEMORY ARRAY DATA32
  CREATE32 handle     = [3]
  SIZE                = [0]
  RESIZE              = [10]
  FILL                = [55]
  COPY                = [55]
  WRITE/READ_CONTENT  = [77]
  READ_SIZE           = [40]
  ARRAY_WRITE/READ    = [99]
  SIZE                = [12]
  ARRAY_APPEND        = [54]
  SIZE                = [13]
 MEMORY ARRAY DATAF
  CREATEF  handle     = [3]
  SIZE                = [0]
  RESIZE              = [10]
  FILL                = [114]
  COPY                = [114]
  WRITE/READ_CONTENT  = [77]
  READ_SIZE           = [40]
  ARRAY_WRITE/READ    = [99]
  SIZE                = [12]
  ARRAY_APPEND        = [54]
  SIZE                = [13]
Test0202
 MEMORY FILE/FILENAME
  FILENAME MERGE      = [../prjs/SelfTest/Testfolder/Testfile.rtf]
  FILENAME SPLIT      = [../prjs/SelfTest/Testfolder/]
  FILENAME SPLIT      = [Testfile]
  FILENAME SPLIT      = [.rtf]
  TOTALSIZE files     = [0]
  TOTALSIZE size [KB] = [0]
  FILE MAKE_FOLDER    = [Ok]
  FILE OPEN_WRITE     = [3]
  FILE OPEN_READ      = [3]
  FILE OPEN_READ size = [8]
  FILE READ_TEXT      = [testtext]
  FILE OPEN_APPEND    = [18]
  TOTALSIZE files     = [3]
  TOTALSIZE size [KB] = [16]
  FILE READ_VALUE     = [0.12345]
  FILE READ_BYTES     = [testbytes]
  FILE MOVE           = [testbytes]
  GET_LOG_SYNC_TIME   = [1234]
  GET_LOG_SYNC_TIME   = [5678]
 MEMORY FILE LOG INTO FILE
  FILE OPEN_LOG       = [4]
  FILE GET_LOG_NAME   = [../prjs/SelfTest/Testfolder/Logfile.rtf]
  FILE GET_HANDLE     = [4]
  FILE GET_HANDLE     = [1]
  LOGFILE size        = [86]
  LOG header          = [Sync data]
  LOG header          = [123]
  LOG header          = [456]
  LOG header          = [789]
  LOG header          = [100]
  LOG header          = [200]
  LOG header          = [Time]
  LOG header          = [Sensor1]
  LOG header          = [Sensor2]
  LOG sample          = [0]
  LOG sample          = [1.1]
  LOG sample          = [1.2]
  LOG sample          = [100]
  LOG sample          = [2.1]
  LOG sample          = [2.2]
  LOG trailer         = [0]
  LOG trailer         = [0]
  LOG trailer         = [-1]
  FILE GET_HANDLE     = [4]
  FILE GET_HANDLE     = [0]
  FILE GET_HANDLE     = [-1]
  FILE GET_HANDLE     = [0]
 MEMORY FILE LOG INTO RAM
  FILE OPEN_LOG ram   = [6]
  FILE GET_LOG_NAME   = [../prjs/SelfTest/Testfolder/Ramfile.rtf]
  FILE GET_HANDLE     = [6]
  FILE GET_HANDLE     = [1]
  RAMFILE size        = [82]
  LOG header          = [Sync data]
  LOG header          = [123]
  LOG header          = [456]
  LOG header          = [789]
  LOG header          = [1]
  LOG header          = [2]
  LOG header          = [Time]
  LOG header          = [Sensor1]
  LOG header          = [Sensor2]
  LOG sample          = [0]
  LOG sample          = [1.1]
  LOG sample          = [1.2]
  LOG sample          = [1]
  LOG sample          = [2.1]
  LOG sample          = [2.2]
  LOG trailer         = [0]
  LOG trailer         = [0]
  LOG trailer         = [-1]
  FILE GET_HANDLE     = [5]
  FILE GET_HANDLE     = [0]
  FILE GET_HANDLE     = [-1]
  FILE GET_HANDLE     = [0]
 MEMORY FILE
  FILE GET_POOL       = [5]
  FILE GET_POOL       = [168660512]
  GET_CACHE_FILES     = [6]
  GET_CACHE_FILE      = [../prjs/SelfTest/Testfolder/Cachefile.rtf]
  DEL_CACHE_FILE      = [0]
  FILE REMOVE         = [0]
---------------------
Success
